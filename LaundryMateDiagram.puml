@startuml LaundryMate_Container
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

AddContainerTag("frontend", $bgColor="#4A90E2", $fontColor="White")
AddContainerTag("backend", $bgColor="#50E3C2", $fontColor="Black")
AddContainerTag("infra", $bgColor="#FFDDC1", $fontColor="Black")
AddContainerTag("external-ai", $bgColor="#F5F5A5", $fontColor="Black")

LAYOUT_LEFT_RIGHT()

Person(user, "User", "User of the mobile application")

System_Boundary(laundrymate, "LaundryMate System") {

  ' FRONTEND
  Container(mobile, "Mobile App", "React Native + Expo", "User interface that enables login and interaction with services", "frontend")

  ' BACKEND
  Container(api, "Backend API", "Django REST", "Backend service with endpoints for image scan", "backend")

  ' INFRASTRUCTURE
  Container(firebase, "Firebase", "BaaS Platform", "Manages authentication and user data", "infra") {
    Container(auth, "Authentication", "Firebase Auth", "User login and registration", "infra")
    Container(db, "Firestore DB", "NoSQL Database", "Stores clothing data and user profiles", "infra")
  }

  ' EXTERNAL AI SERVICES
  Container(ai, "AI Services", "Third-Party APIs", "External AI services for detection and recommendations", "external-ai") {
    Container(gemini, "Gemini API", "Text Generation", "Provides washing program tips", "external-ai")
    Container(roboflow, "YOLOv8n","", "Detects washing symbols from uploaded images", "external-ai")
  }
}

' USER RELATIONSHIPS
Rel(user, mobile, "Uses")

' FRONTEND RELATIONSHIPS
Rel(mobile, auth, "Login / Register")
Rel(mobile, db, "Stores clothing / profile data")
Rel(mobile, api, "Sends image / question", "HTTPS")

' BACKEND â†” AI RELATIONSHIPS
Rel(api, roboflow, "Sends image for detection", "HTTPS")
Rel(roboflow, api, "Detected symbols", "JSON")
Rel(api, gemini, "Sends clothing info / user prompt", "Prompt")
Rel(gemini, api, "AI recommendations / answers", "Text")

@enduml
